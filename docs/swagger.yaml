basePath: manager-service/v1
definitions:
  api.HealthResponse:
    properties:
      status:
        type: string
    type: object
  api.LoginParam:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  db.User:
    properties:
      activated:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  proto.AuthResponse:
    properties:
      jwt:
        type: string
    type: object
host: 20.13.80.52
info:
  contact:
    email: sr8905@student.uni-lj.si
    name: Å imen Ravnik
  description: This is a manager service server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: CampIn Manager Service API
  version: "1.0"
paths:
  /health/live:
    get:
      consumes:
      - application/json
      description: Liveness
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.HealthResponse'
            type: array
      summary: Liveness
      tags:
      - Health
  /health/ready:
    get:
      consumes:
      - application/json
      description: Readiness
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Readiness
      tags:
      - Health
  /v1/login:
    post:
      consumes:
      - application/json
      description: Login for a user
      parameters:
      - description: Login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.LoginParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/proto.AuthResponse'
            type: array
      summary: User Login
      tags:
      - Login
  /v1/users:
    get:
      consumes:
      - application/json
      description: Returns user by ID
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.User'
            type: array
      summary: Users list
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Creates a user
      parameters:
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.User'
            type: array
      summary: Users create
      tags:
      - Users
  /v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Returns user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.User'
            type: array
      summary: Users by ID
      tags:
      - Users
swagger: "2.0"
